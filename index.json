{
  "api/Avolantis.Text.QueryString.html": {
    "href": "api/Avolantis.Text.QueryString.html",
    "title": "Namespace Avolantis.Text.QueryString | Avolantis.Text.QueryString Documentation",
    "keywords": "Namespace Avolantis.Text.QueryString Classes QueryParameterCollection Represents a collection of query string parameters QueryParameterConverter Base class for implementing custom query string parameter converters QueryParameterConverter<T> Base class for implementing custom query string parameter converters QueryParameterIgnoreCondition Specifies the conditions for skipping a parameter during serialization QueryParameterKeyCasingPolicy Specifies whether to adjust casing of QueryStringParameter keys while serializing objects to QueryParameterCollection s QueryStringConverterAttribute Specifies an IQueryParameterConverter to be used when serializing the attributed class or property QueryStringEmptyStringOptions Specifies options for handling empty and whitespace-only strings QueryStringFormatAttribute Apply the given Format and Provider when serializing an object of type IFormattable QueryStringIgnoreAttribute Specifies the condition for ignoring a type or property during serialization QueryStringParameter Represents a query parameter in a key-value pair form QueryStringPrecisionAttribute Specifies the precision of the fractional part for serializing a floating-point number QueryStringPropertyNameAttribute Specifies the property name to write when serializing this property to a query string QueryStringSerializerOptions Specifies options for the serialization process QueryStringWriter Provides an API for writing parameters to a QueryParameterCollection Interfaces IQueryParameterConverter Interface for query string parameter converters"
  },
  "api/Avolantis.Text.QueryString.IQueryParameterConverter.html": {
    "href": "api/Avolantis.Text.QueryString.IQueryParameterConverter.html",
    "title": "Interface IQueryParameterConverter | Avolantis.Text.QueryString Documentation",
    "keywords": "Interface IQueryParameterConverter Interface for query string parameter converters Namespace : Avolantis.Text.QueryString Assembly : Avolantis.Text.QueryString.dll Syntax public interface IQueryParameterConverter Remarks Use the provided QueryParameterConverter or QueryParameterConverter<T> base classes, when appropriate Methods CanConvert(MemberInfo) Returns whether this converter is can convert values of the given type or member Declaration bool CanConvert(MemberInfo typeOrMember) Parameters Type Name Description MemberInfo typeOrMember The type or member to be converted Returns Type Description Boolean Whether this converter is compatible with the given type or member Convert(QueryStringWriter, Object, MemberInfo, QueryStringSerializerOptions) Converts an object to QueryStringParameter (s) using the given QueryStringWriter Declaration void Convert(QueryStringWriter writer, object value, MemberInfo typeOrMember, QueryStringSerializerOptions options) Parameters Type Name Description QueryStringWriter writer The QueryStringWriter to write with Object value The value of to be converted MemberInfo typeOrMember The type or member to be converted QueryStringSerializerOptions options Serialization options"
  },
  "api/Avolantis.Text.QueryString.QueryParameterCollection.html": {
    "href": "api/Avolantis.Text.QueryString.QueryParameterCollection.html",
    "title": "Class QueryParameterCollection | Avolantis.Text.QueryString Documentation",
    "keywords": "Class QueryParameterCollection Represents a collection of query string parameters Inheritance Object QueryParameterCollection Implements ICollection < QueryStringParameter > IEnumerable < QueryStringParameter > IEnumerable IEquatable < QueryParameterCollection > Namespace : Avolantis.Text.QueryString Assembly : Avolantis.Text.QueryString.dll Syntax public sealed class QueryParameterCollection : Object Constructors QueryParameterCollection() Initializes an empty QueryParameterCollection instance Declaration public QueryParameterCollection() QueryParameterCollection(IEnumerable<QueryStringParameter>) Initializes a new QueryParameterCollection instance with the specified parameters Declaration public QueryParameterCollection(IEnumerable<QueryStringParameter> parameters) Parameters Type Name Description IEnumerable < QueryStringParameter > parameters The parameters to copy into the new QueryParameterCollection Properties Item[String] Gets the values associated with the given key Declaration public IReadOnlyList<string> this[string name] { get; } Parameters Type Name Description String name The parameter name to find Property Value Type Description IReadOnlyList < String > Exceptions Type Condition KeyNotFoundException Thrown if a parameter with the given name could not be found Item[String, Int32] Gets the value at the given index of the specified parameter Declaration public string this[string name, int index] { get; } Parameters Type Name Description String name The name of the parameter Int32 index The index of the value to retrieve Property Value Type Description String Exceptions Type Condition KeyNotFoundException Thrown if a parameter with the given name could not be found ArgumentOutOfRangeException Thrown if index is less than 0 or greater than the count of values associated with the given parameter Keys Gets the key of parameters defined in this query string Declaration public IReadOnlyCollection<string> Keys { get; } Property Value Type Description IReadOnlyCollection < String > Methods Add(QueryStringParameter) Add the given parameter to this query string Declaration public void Add(QueryStringParameter item) Parameters Type Name Description QueryStringParameter item The parameter to add Remarks Use Add(String, String) instead, when possible Add(String, String) Adds a parameter to the query string Declaration public void Add(string name, string value) Parameters Type Name Description String name The name of the parameter String value The value of the parameter Clear() Removes all parameters from the query string Declaration public void Clear() Clone() Returns a copy of this query parameter collection Declaration public QueryParameterCollection Clone() Returns Type Description QueryParameterCollection Contains(QueryStringParameter) Determines whether this query string contains the specified parameter Declaration public bool Contains(QueryStringParameter item) Parameters Type Name Description QueryStringParameter item The parameter to search for Returns Type Description Boolean Contains(String, String, StringComparer) Determines if the query string contains a parameter with the specified name and value Declaration public bool Contains(string name, string value, StringComparer comparer = null) Parameters Type Name Description String name The parameter name to look for String value The value to look for StringComparer comparer The string comparer to use Returns Type Description Boolean ContainsKey(String) Determines if the query string contains at least one parameter with the specified name Declaration public bool ContainsKey(string name) Parameters Type Name Description String name The parameter name to look for Returns Type Description Boolean Count() Returns the count of parameters Declaration public int Count() Returns Type Description Int32 Create(IEnumerable<KeyValuePair<String, String>>) Initializes a new QueryParameterCollection instance with the specified parameters Declaration public static QueryParameterCollection Create(IEnumerable<KeyValuePair<string, string>> parameters) Parameters Type Name Description IEnumerable < KeyValuePair < String , String >> parameters The parameters to copy into the new QueryParameterCollection Returns Type Description QueryParameterCollection Create<T>(IEnumerable<KeyValuePair<String, T>>) Initializes a new QueryParameterCollection instance with the specified parameters Declaration public static QueryParameterCollection Create<T>(IEnumerable<KeyValuePair<string, T>> parameters) where T : IEnumerable<string> Parameters Type Name Description IEnumerable < KeyValuePair < String , T>> parameters The parameters to copy into the new QueryParameterCollection Returns Type Description QueryParameterCollection Type Parameters Name Description T Equals(QueryParameterCollection) Determines whether the current query string is equivalent to the provided query string Declaration public bool Equals(QueryParameterCollection other) Parameters Type Name Description QueryParameterCollection other The query string to compare to Returns Type Description Boolean Returns true if the query string has the exact same parameters as the current query string Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Returns Type Description Boolean GetEnumerator() Gets an enumerator to enumerate the query string parameters Declaration public IEnumerator<QueryStringParameter> GetEnumerator() Returns Type Description IEnumerator < QueryStringParameter > The IEnumerator<T> instance GetHashCode() Declaration public override int GetHashCode() Returns Type Description Int32 Parse(String, String, String) Parses a QueryParameterCollection instance from its string representation Declaration public static QueryParameterCollection Parse(string input, string separator = \"&\", string prefix = \"?\") Parameters Type Name Description String input The input string String separator The separator to look for, defaults to & String prefix The prefix to look for, defaults to ? Returns Type Description QueryParameterCollection The parsed QueryParameterCollection instance Exceptions Type Condition ArgumentException Thrown when input cannot be parsed Remove(QueryStringParameter) Removes the specified parameter from this query string Declaration public bool Remove(QueryStringParameter item) Parameters Type Name Description QueryStringParameter item The parameter to remove Returns Type Description Boolean Whether the parameter was removed Remove(String, Int32) Removes the value at the given index from the specified parameter Declaration public bool Remove(string name, int index) Parameters Type Name Description String name The name of parameter to remove Int32 index The index of the value to remove Returns Type Description Boolean Whether parameters were removed Exceptions Type Condition ArgumentOutOfRangeException Thrown if index is less than 0 -or- index is greater than or equal to the number of values Remove(String, String) Removes the first parameter with the specified name and value. Declaration public bool Remove(string name, string value) Parameters Type Name Description String name The name of the parameter to remove String value The value to remove Returns Type Description Boolean Whether a parameter was removed RemoveAll(String) Removes all parameters with the specified name Declaration public bool RemoveAll(string name) Parameters Type Name Description String name The name of parameters to remove Returns Type Description Boolean Whether parameters were removed RemoveAll(String, String) Removes all parameters with the specified name and value Declaration public int RemoveAll(string name, string value) Parameters Type Name Description String name The name of parameters to remove String value The value to match when deciding whether to remove Returns Type Description Int32 The count of parameters removed Set(String, String) Sets a parameter in the query string Declaration public void Set(string name, string value) Parameters Type Name Description String name The name of the parameter String value The value of the parameter Remarks Existing parameters with the same name are removed ToString() Serializes the query string to its string representation Declaration public override string ToString() Returns Type Description String The URL-encoded query string Remarks If there are no parameters, an empty string will be returned ToString(Boolean, String, String) Serializes the query string to its string representation using the specified settings Declaration public string ToString(bool ignoreNullValues, string separator = \"&\", string prefix = \"?\") Parameters Type Name Description Boolean ignoreNullValues Whether to ignore parameters with null value String separator The separator to use, defaults to & String prefix The prefix to use, defaults to ? Returns Type Description String The URL-encoded query string Remarks If there are no parameters, an empty string will be returned TryGetValue(String, Int32, out String) Gets the values associated with the given key Declaration public bool TryGetValue(string name, int index, out string value) Parameters Type Name Description String name The parameter name to find Int32 index The index of the value to retrieve String value The value Returns Type Description Boolean Whether a parameter with a matching name and a value at the given index exists Exceptions Type Condition ArgumentOutOfRangeException Thrown if index is less than 0 TryGetValues(String, out IReadOnlyList<String>) Gets the values associated with the given key Declaration public bool TryGetValues(string name, out IReadOnlyList<string> values) Parameters Type Name Description String name The parameter name to find IReadOnlyList < String > values The values Returns Type Description Boolean Whether at least one parameter with a matching name exists TryParse(String, out QueryParameterCollection, String, String) Tries to parse a QueryParameterCollection instance from its string representation Declaration public static bool TryParse(string input, out QueryParameterCollection result, string separator = \"&\", string prefix = \"?\") Parameters Type Name Description String input The input string QueryParameterCollection result The parsed QueryParameterCollection instance or null String separator The separator to look for, defaults to & String prefix The prefix to look for, defaults to ? Returns Type Description Boolean Whether parsing was successful Operators Equality(QueryParameterCollection, QueryParameterCollection) Declaration public static bool operator ==(QueryParameterCollection left, QueryParameterCollection right) Parameters Type Name Description QueryParameterCollection left QueryParameterCollection right Returns Type Description Boolean Inequality(QueryParameterCollection, QueryParameterCollection) Declaration public static bool operator !=(QueryParameterCollection left, QueryParameterCollection right) Parameters Type Name Description QueryParameterCollection left QueryParameterCollection right Returns Type Description Boolean Implements System.Collections.Generic.ICollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable System.IEquatable<T>"
  },
  "api/Avolantis.Text.QueryString.QueryParameterConverter.html": {
    "href": "api/Avolantis.Text.QueryString.QueryParameterConverter.html",
    "title": "Class QueryParameterConverter | Avolantis.Text.QueryString Documentation",
    "keywords": "Class QueryParameterConverter Base class for implementing custom query string parameter converters Inheritance Object QueryParameterConverter QueryParameterConverter<T> Implements IQueryParameterConverter Namespace : Avolantis.Text.QueryString Assembly : Avolantis.Text.QueryString.dll Syntax public abstract class QueryParameterConverter : Object, IQueryParameterConverter Remarks Use this class when the converter supports multiple types, otherwise inherit from QueryParameterConverter<T> Constructors QueryParameterConverter() Declaration protected QueryParameterConverter() Methods CanConvert(MemberInfo) Returns whether this converter is can convert values of the given type or member Declaration public virtual bool CanConvert(MemberInfo typeOrMember) Parameters Type Name Description MemberInfo typeOrMember The type or member to be converted Returns Type Description Boolean Whether this converter is compatible with the given type or member CanConvert(Type) Returns whether this converter is can convert values of the given type Declaration public abstract bool CanConvert(Type type) Parameters Type Name Description Type type The type to be converted Returns Type Description Boolean Whether this converter is compatible with the given type Convert(QueryStringWriter, Object, MemberInfo, QueryStringSerializerOptions) Converts an object to QueryStringParameter (s) using the given QueryStringWriter Declaration public virtual void Convert(QueryStringWriter writer, object value, MemberInfo typeOrMember, QueryStringSerializerOptions options) Parameters Type Name Description QueryStringWriter writer The QueryStringWriter to write with Object value The value of to be converted MemberInfo typeOrMember The type or member to be converted QueryStringSerializerOptions options Serialization options Convert(QueryStringWriter, Object, Type, QueryStringSerializerOptions) Converts an object to QueryStringParameter (s) using the given QueryStringWriter Declaration public abstract void Convert(QueryStringWriter writer, object value, Type type, QueryStringSerializerOptions options) Parameters Type Name Description QueryStringWriter writer The QueryStringWriter to write with Object value The value of be converted Type type The type to be converted QueryStringSerializerOptions options Serialization options Implements IQueryParameterConverter"
  },
  "api/Avolantis.Text.QueryString.QueryParameterConverter-1.html": {
    "href": "api/Avolantis.Text.QueryString.QueryParameterConverter-1.html",
    "title": "Class QueryParameterConverter<T> | Avolantis.Text.QueryString Documentation",
    "keywords": "Class QueryParameterConverter<T> Base class for implementing custom query string parameter converters Inheritance Object QueryParameterConverter QueryParameterConverter<T> Implements IQueryParameterConverter Inherited Members QueryParameterConverter.CanConvert(MemberInfo) QueryParameterConverter.Convert(QueryStringWriter, Object, MemberInfo, QueryStringSerializerOptions) Namespace : Avolantis.Text.QueryString Assembly : Avolantis.Text.QueryString.dll Syntax public abstract class QueryParameterConverter<T> : QueryParameterConverter, IQueryParameterConverter Type Parameters Name Description T The type of the converted object Constructors QueryParameterConverter() Declaration protected QueryParameterConverter() Methods CanConvert(Type) Returns whether this converter is can convert values of the given type Declaration public override bool CanConvert(Type type) Parameters Type Name Description Type type The type to be converted Returns Type Description Boolean Whether this converter is compatible with the given type Overrides QueryParameterConverter.CanConvert(Type) Convert(QueryStringWriter, T, QueryStringSerializerOptions) Converts an object of type T to QueryStringParameter (s) using the given QueryStringWriter Declaration public abstract void Convert(QueryStringWriter writer, T value, QueryStringSerializerOptions options) Parameters Type Name Description QueryStringWriter writer The QueryStringWriter to write with T value The value to be converted QueryStringSerializerOptions options Serialization options Convert(QueryStringWriter, Object, Type, QueryStringSerializerOptions) Converts an object to QueryStringParameter (s) using the given QueryStringWriter Declaration public override void Convert(QueryStringWriter writer, object value, Type type, QueryStringSerializerOptions options) Parameters Type Name Description QueryStringWriter writer The QueryStringWriter to write with Object value The value of be converted Type type The type to be converted QueryStringSerializerOptions options Serialization options Overrides QueryParameterConverter.Convert(QueryStringWriter, Object, Type, QueryStringSerializerOptions) Implements IQueryParameterConverter"
  },
  "api/Avolantis.Text.QueryString.QueryParameterIgnoreCondition.html": {
    "href": "api/Avolantis.Text.QueryString.QueryParameterIgnoreCondition.html",
    "title": "Class QueryParameterIgnoreCondition | Avolantis.Text.QueryString Documentation",
    "keywords": "Class QueryParameterIgnoreCondition Specifies the conditions for skipping a parameter during serialization Inheritance Object QueryParameterIgnoreCondition Namespace : Avolantis.Text.QueryString Assembly : Avolantis.Text.QueryString.dll Syntax public sealed class QueryParameterIgnoreCondition : Enum Fields Always Always serialize this parameter Declaration public const QueryParameterIgnoreCondition Always Field Value Type Description QueryParameterIgnoreCondition Never Never serialize this parameter Declaration public const QueryParameterIgnoreCondition Never Field Value Type Description QueryParameterIgnoreCondition value__ Declaration public int value__ Field Value Type Description Int32 WhenWritingDefault Skip this parameter when the value is default Declaration public const QueryParameterIgnoreCondition WhenWritingDefault Field Value Type Description QueryParameterIgnoreCondition WhenWritingNull Skip this parameter when the value is null Declaration public const QueryParameterIgnoreCondition WhenWritingNull Field Value Type Description QueryParameterIgnoreCondition"
  },
  "api/Avolantis.Text.QueryString.QueryParameterKeyCasingPolicy.html": {
    "href": "api/Avolantis.Text.QueryString.QueryParameterKeyCasingPolicy.html",
    "title": "Class QueryParameterKeyCasingPolicy | Avolantis.Text.QueryString Documentation",
    "keywords": "Class QueryParameterKeyCasingPolicy Specifies whether to adjust casing of QueryStringParameter keys while serializing objects to QueryParameterCollection s Inheritance Object QueryParameterKeyCasingPolicy Namespace : Avolantis.Text.QueryString Assembly : Avolantis.Text.QueryString.dll Syntax public sealed class QueryParameterKeyCasingPolicy : Enum Fields CamelCase Change casing to camelCase Declaration public const QueryParameterKeyCasingPolicy CamelCase Field Value Type Description QueryParameterKeyCasingPolicy KebabCase Change casing to kebab-case Declaration public const QueryParameterKeyCasingPolicy KebabCase Field Value Type Description QueryParameterKeyCasingPolicy LowerCase Change casing to lowercase Declaration public const QueryParameterKeyCasingPolicy LowerCase Field Value Type Description QueryParameterKeyCasingPolicy NoChange Leve casing as-is Declaration public const QueryParameterKeyCasingPolicy NoChange Field Value Type Description QueryParameterKeyCasingPolicy PascalCase Change casing to PascalCase Declaration public const QueryParameterKeyCasingPolicy PascalCase Field Value Type Description QueryParameterKeyCasingPolicy UpperCase Change casing to UPPERCASE Declaration public const QueryParameterKeyCasingPolicy UpperCase Field Value Type Description QueryParameterKeyCasingPolicy value__ Declaration public int value__ Field Value Type Description Int32"
  },
  "api/Avolantis.Text.QueryString.QueryStringConverterAttribute.html": {
    "href": "api/Avolantis.Text.QueryString.QueryStringConverterAttribute.html",
    "title": "Class QueryStringConverterAttribute | Avolantis.Text.QueryString Documentation",
    "keywords": "Class QueryStringConverterAttribute Specifies an IQueryParameterConverter to be used when serializing the attributed class or property Inheritance Object QueryStringConverterAttribute Namespace : Avolantis.Text.QueryString Assembly : Avolantis.Text.QueryString.dll Syntax public class QueryStringConverterAttribute : Attribute Constructors QueryStringConverterAttribute(IQueryParameterConverter) Specifies an IQueryParameterConverter to be used when serializing the attributed class or property Declaration public QueryStringConverterAttribute(IQueryParameterConverter converter) Parameters Type Name Description IQueryParameterConverter converter The IQueryParameterConverter to use QueryStringConverterAttribute(Type) Specifies an IQueryParameterConverter to be used when serializing the attributed class or property Declaration public QueryStringConverterAttribute(Type type) Parameters Type Name Description Type type The type of the IQueryParameterConverter to use Exceptions Type Condition ArgumentException Thrown if the provided type does not include a public parameterless constructor or is not of type IQueryParameterConverter Properties Converter Gets the IQueryParameterConverter Declaration public IQueryParameterConverter Converter { get; } Property Value Type Description IQueryParameterConverter"
  },
  "api/Avolantis.Text.QueryString.QueryStringEmptyStringOptions.html": {
    "href": "api/Avolantis.Text.QueryString.QueryStringEmptyStringOptions.html",
    "title": "Class QueryStringEmptyStringOptions | Avolantis.Text.QueryString Documentation",
    "keywords": "Class QueryStringEmptyStringOptions Specifies options for handling empty and whitespace-only strings Inheritance Object QueryStringEmptyStringOptions Namespace : Avolantis.Text.QueryString Assembly : Avolantis.Text.QueryString.dll Syntax public sealed class QueryStringEmptyStringOptions : Enum Fields Default Leave string values as-is Declaration public const QueryStringEmptyStringOptions Default Field Value Type Description QueryStringEmptyStringOptions TreatEmptyAsNotPresent Treat empty strings as if the parameter was not present Declaration public const QueryStringEmptyStringOptions TreatEmptyAsNotPresent Field Value Type Description QueryStringEmptyStringOptions TreatEmptyAsNull Treat empty strings as null values Declaration public const QueryStringEmptyStringOptions TreatEmptyAsNull Field Value Type Description QueryStringEmptyStringOptions Remarks IgnoreNullValues will still control whether the parameter will be added to the result TreatWhitespaceAsNotPresent Treat empty strings and strings only of whitespace as if the parameter was not present Declaration public const QueryStringEmptyStringOptions TreatWhitespaceAsNotPresent Field Value Type Description QueryStringEmptyStringOptions TreatWhitespaceAsNull Treat empty strings and string only of whitespace as null values Declaration public const QueryStringEmptyStringOptions TreatWhitespaceAsNull Field Value Type Description QueryStringEmptyStringOptions Remarks IgnoreNullValues will still control whether the parameter will be added to the result value__ Declaration public int value__ Field Value Type Description Int32"
  },
  "api/Avolantis.Text.QueryString.QueryStringFormatAttribute.html": {
    "href": "api/Avolantis.Text.QueryString.QueryStringFormatAttribute.html",
    "title": "Class QueryStringFormatAttribute | Avolantis.Text.QueryString Documentation",
    "keywords": "Class QueryStringFormatAttribute Apply the given Format and Provider when serializing an object of type IFormattable Inheritance Object QueryStringFormatAttribute Namespace : Avolantis.Text.QueryString Assembly : Avolantis.Text.QueryString.dll Syntax public class QueryStringFormatAttribute : Attribute Constructors QueryStringFormatAttribute(String) Apply the given Format and Provider when serializing an object of type IFormattable Declaration public QueryStringFormatAttribute(string format) Parameters Type Name Description String format The format to use when serializing this type or property Properties Format Gets the format to use when serializing this type or property Declaration public string Format { get; } Property Value Type Description String Provider Gets or sets the format provider to use when serializing this type or property Declaration public IFormatProvider Provider { get; set; } Property Value Type Description IFormatProvider"
  },
  "api/Avolantis.Text.QueryString.QueryStringIgnoreAttribute.html": {
    "href": "api/Avolantis.Text.QueryString.QueryStringIgnoreAttribute.html",
    "title": "Class QueryStringIgnoreAttribute | Avolantis.Text.QueryString Documentation",
    "keywords": "Class QueryStringIgnoreAttribute Specifies the condition for ignoring a type or property during serialization Inheritance Object QueryStringIgnoreAttribute Namespace : Avolantis.Text.QueryString Assembly : Avolantis.Text.QueryString.dll Syntax public class QueryStringIgnoreAttribute : Attribute Constructors QueryStringIgnoreAttribute() Declaration public QueryStringIgnoreAttribute() Properties Condition The condition Declaration public QueryParameterIgnoreCondition Condition { get; set; } Property Value Type Description QueryParameterIgnoreCondition"
  },
  "api/Avolantis.Text.QueryString.QueryStringParameter.html": {
    "href": "api/Avolantis.Text.QueryString.QueryStringParameter.html",
    "title": "Class QueryStringParameter | Avolantis.Text.QueryString Documentation",
    "keywords": "Class QueryStringParameter Represents a query parameter in a key-value pair form Inheritance Object QueryStringParameter Implements IEquatable < QueryStringParameter > Namespace : Avolantis.Text.QueryString Assembly : Avolantis.Text.QueryString.dll Syntax public sealed class QueryStringParameter : ValueType Constructors QueryStringParameter(String, String) Represents a query parameter in a key-value pair form Declaration public QueryStringParameter(string Key, string Value) Parameters Type Name Description String Key The key of the query parameter String Value The value of the query parameter Fields NullValue Represents the value null as a string Declaration public const string NullValue = \"null\" Field Value Type Description String Properties EncodedKey Returns the key of this query parameter, with URL encoding applied Declaration public string EncodedKey { get; } Property Value Type Description String EncodedValue Returns the value of this query parameter, with URL encoding applied Declaration public string EncodedValue { get; } Property Value Type Description String Key Declaration public string Key { get; set; } Property Value Type Description String Value Declaration public string Value { get; set; } Property Value Type Description String Methods Deconstruct(out String, out String) Declaration public void Deconstruct(out string Key, out string Value) Parameters Type Name Description String Key String Value Equals(QueryStringParameter) Determines if this query string parameter is equal to the specified one, using the default string comparison Declaration public bool Equals(QueryStringParameter other) Parameters Type Name Description QueryStringParameter other The other query parameter Returns Type Description Boolean Whether the two query parameters are considered equal Equals(Nullable<QueryStringParameter>) Determines if this query string parameter is equal to the specified one, using the default string comparison Declaration public bool Equals(Nullable<QueryStringParameter> other) Parameters Type Name Description Nullable < QueryStringParameter > other The other query parameter Returns Type Description Boolean Whether the two query parameters are considered equal Equals(Nullable<QueryStringParameter>, StringComparison) Determines if this query string parameter is equal to the specified one, using the specified string comparison Declaration public bool Equals(Nullable<QueryStringParameter> other, StringComparison stringComparison) Parameters Type Name Description Nullable < QueryStringParameter > other The other query parameter StringComparison stringComparison The StringComparison to use when comparing keys and values Returns Type Description Boolean Whether the two query parameters are considered equal Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Returns Type Description Boolean GetHashCode() Declaration public override int GetHashCode() Returns Type Description Int32 Parse(String) Parses a QueryStringParameter instance from its string representation Declaration public static QueryStringParameter Parse(string input) Parameters Type Name Description String input The value to parse Returns Type Description QueryStringParameter The parsed QueryStringParameter instance Exceptions Type Condition ArgumentException Thrown when input cannot be parsed ToString() Return the string representation of this query parameter Declaration public override string ToString() Returns Type Description String ToString(StringBuilder) Appends the string representation of this query parameter to a StringBuilder Declaration public void ToString(StringBuilder sb) Parameters Type Name Description StringBuilder sb The StringBuilder instance to append onto TryParse(String, out Nullable<QueryStringParameter>) Tries to parse a QueryStringParameter instance from its string representation Declaration public static bool TryParse(string input, out Nullable<QueryStringParameter> result) Parameters Type Name Description String input The value to parse Nullable < QueryStringParameter > result The parsed QueryStringParameter instance or null Returns Type Description Boolean Whether parsing was successful Operators Equality(QueryStringParameter, QueryStringParameter) Declaration public static bool operator ==(QueryStringParameter left, QueryStringParameter right) Parameters Type Name Description QueryStringParameter left QueryStringParameter right Returns Type Description Boolean Inequality(QueryStringParameter, QueryStringParameter) Declaration public static bool operator !=(QueryStringParameter left, QueryStringParameter right) Parameters Type Name Description QueryStringParameter left QueryStringParameter right Returns Type Description Boolean Implements System.IEquatable<T>"
  },
  "api/Avolantis.Text.QueryString.QueryStringPrecisionAttribute.html": {
    "href": "api/Avolantis.Text.QueryString.QueryStringPrecisionAttribute.html",
    "title": "Class QueryStringPrecisionAttribute | Avolantis.Text.QueryString Documentation",
    "keywords": "Class QueryStringPrecisionAttribute Specifies the precision of the fractional part for serializing a floating-point number Inheritance Object QueryStringPrecisionAttribute Namespace : Avolantis.Text.QueryString Assembly : Avolantis.Text.QueryString.dll Syntax public class QueryStringPrecisionAttribute : Attribute Constructors QueryStringPrecisionAttribute(Int32) Specifies the precision of the fractional part for serializing a floating-point number Declaration public QueryStringPrecisionAttribute(int precision) Parameters Type Name Description Int32 precision The number of fractional digits to write Exceptions Type Condition ArgumentOutOfRangeException Thrown if precision is less than zero -or- greater than 5 Properties Precision Gets the number of fractional digits to write Declaration public int Precision { get; } Property Value Type Description Int32"
  },
  "api/Avolantis.Text.QueryString.QueryStringPropertyNameAttribute.html": {
    "href": "api/Avolantis.Text.QueryString.QueryStringPropertyNameAttribute.html",
    "title": "Class QueryStringPropertyNameAttribute | Avolantis.Text.QueryString Documentation",
    "keywords": "Class QueryStringPropertyNameAttribute Specifies the property name to write when serializing this property to a query string Inheritance Object QueryStringPropertyNameAttribute Namespace : Avolantis.Text.QueryString Assembly : Avolantis.Text.QueryString.dll Syntax public class QueryStringPropertyNameAttribute : Attribute Remarks The QueryParameterKeyCasingPolicy is ignored, when a custom parameter name is set with this attribute Constructors QueryStringPropertyNameAttribute(String) Specifies the property name to write when serializing this property to a query string Declaration public QueryStringPropertyNameAttribute(string name) Parameters Type Name Description String name The desired name of the property Remarks The QueryParameterKeyCasingPolicy is ignored, when a custom parameter name is set with this attribute Properties Name Gets the name of the property Declaration public string Name { get; } Property Value Type Description String"
  },
  "api/Avolantis.Text.QueryString.QueryStringSerializerOptions.html": {
    "href": "api/Avolantis.Text.QueryString.QueryStringSerializerOptions.html",
    "title": "Class QueryStringSerializerOptions | Avolantis.Text.QueryString Documentation",
    "keywords": "Class QueryStringSerializerOptions Specifies options for the serialization process Inheritance Object QueryStringSerializerOptions Namespace : Avolantis.Text.QueryString Assembly : Avolantis.Text.QueryString.dll Syntax public class QueryStringSerializerOptions : Object Constructors QueryStringSerializerOptions() Declaration public QueryStringSerializerOptions() Properties AllowDuplicateParameters Gets or sets whether to print duplicate values during serialization Declaration public bool AllowDuplicateParameters { get; set; } Property Value Type Description Boolean AutoConvertToUtc Gets or sets whether to convert DateTime values to UTC Declaration public bool AutoConvertToUtc { get; set; } Property Value Type Description Boolean Converters Gets or sets the available IQueryParameterConverter s used to convert CLR objects to their corresponding QueryStringParameter s Declaration public ICollection<IQueryParameterConverter> Converters { get; set; } Property Value Type Description ICollection < IQueryParameterConverter > DateOnlyFormat Gets or sets the format string for DateOnly values Declaration public string DateOnlyFormat { get; set; } Property Value Type Description String DateTimeFormat Gets or sets the format string for DateTime values Declaration public string DateTimeFormat { get; set; } Property Value Type Description String Default Gets or sets the default query string serializer options Declaration public static QueryStringSerializerOptions Default { get; set; } Property Value Type Description QueryStringSerializerOptions DefaultPrecision Gets or sets the default precision of fractional numbers Declaration public int DefaultPrecision { get; set; } Property Value Type Description Int32 EmptyStringOptions Gets or sets the QueryStringEmptyStringOptions Declaration public QueryStringEmptyStringOptions EmptyStringOptions { get; set; } Property Value Type Description QueryStringEmptyStringOptions IgnoreNullValues Gets or sets whether to ignore null values during serialization Declaration public bool IgnoreNullValues { get; set; } Property Value Type Description Boolean KeyCasingPolicy Gets or sets the QueryParameterKeyCasingPolicy Declaration public QueryParameterKeyCasingPolicy KeyCasingPolicy { get; set; } Property Value Type Description QueryParameterKeyCasingPolicy ParameterSeparator Gets or sets the parameter separator of the query string Declaration public string ParameterSeparator { get; set; } Property Value Type Description String Prefix Gets or sets the prefix of the query string Declaration public string Prefix { get; set; } Property Value Type Description String StringComparer Gets or sets the default string comparer used when checking for duplicate parameters Declaration public StringComparer StringComparer { get; set; } Property Value Type Description StringComparer TimeOnlyFormat Gets or sets the format string for TimeOnly values Declaration public string TimeOnlyFormat { get; set; } Property Value Type Description String TrimStrings Gets or sets whether to auto-trim string values Declaration public bool TrimStrings { get; set; } Property Value Type Description Boolean"
  },
  "api/Avolantis.Text.QueryString.QueryStringWriter.html": {
    "href": "api/Avolantis.Text.QueryString.QueryStringWriter.html",
    "title": "Class QueryStringWriter | Avolantis.Text.QueryString Documentation",
    "keywords": "Class QueryStringWriter Provides an API for writing parameters to a QueryParameterCollection Inheritance Object QueryStringWriter Namespace : Avolantis.Text.QueryString Assembly : Avolantis.Text.QueryString.dll Syntax public class QueryStringWriter : Object Methods CreateChild(String) Creates a child QueryStringWriter which prefixes written parameter keys with the given prefix Declaration public QueryStringWriter CreateChild(string prefix) Parameters Type Name Description String prefix The prefix Returns Type Description QueryStringWriter A child QueryStringWriter WriteBoolean(Boolean) Writes a boolean value as a query parameter Declaration public void WriteBoolean(bool value) Parameters Type Name Description Boolean value The value to write WriteBoolean(String, Boolean) Writes a boolean query parameter Declaration public void WriteBoolean(string key, bool value) Parameters Type Name Description String key The key of the parameter Boolean value The value to write WriteNull() Writes null value as a query parameter Declaration public void WriteNull() WriteNull(String) Writes null as a query parameter Declaration public void WriteNull(string key) Parameters Type Name Description String key The key of the parameter WriteString(String) Writes a string value as a query parameter Declaration public void WriteString(string value) Parameters Type Name Description String value The value to write WriteString(String, String) Writes a string query parameter Declaration public void WriteString(string key, string value) Parameters Type Name Description String key The key of the parameter String value The value to write"
  },
  "api/index.html": {
    "href": "api/index.html",
    "title": "Overview | Avolantis.Text.QueryString Documentation",
    "keywords": "Overview This project has an auto-generated documentation from XML source code comments, using docfx . You can browse the contents using the navigation sidebar on the left."
  },
  "index.html": {
    "href": "index.html",
    "title": "Avolantis.Text.QueryString | Avolantis.Text.QueryString Documentation",
    "keywords": "Avolantis.Text.QueryString URL query string handling and serialization for .NET 6 This library helps you manage URL query parameters in a specialized collection and allows you to serialize a POCO to a query string. :warning: 🚧 IMPORTANT: This project has not yet reached it's first stable release and is being developed currently. See how you can help below. Install dotnet package add Avolantis.Text.QueryString Avolantis.Text.QueryString targets .NET 6. Support for preceding versions of .NET (Core) is not a current goal. Please open an issue to request targeting such environments. The project follows the conventions outlined in Semantic Versioning 2.0.0 . Motivation Imagine having to write a client application in C# (e.g. Blazor WebAssembly) to send queries to REST endpoint with various filtering options via query string parameters, like Task<IEnumerable<UserDto>> GetList([FromQuery] UserQueryOptions options) { // ... } class UserDto { public string UserName { get; set; } public DateTime CreatedAt { get;set; } public bool IsDeleted { get; set; } } class UserQueryOptions { // Retrieve users with specified names public IEnumerbale<string> Name { get; set; } // Retrieve users created before the given timestamp public DateTime? CreatedBefore { get; set; } // Filter by deleted status public bool IsDeleted { get; set; } = false; } Using this library you can use a POCO like the one above to construct your filters. var filter = new UserQueryOptions { Name = new string[] { \"John Doe\", \"Jane Doe\" }, IsDeleted = true }; var qs = QueryStringSerializer.Serialize(filter); // ?name=John+Doe&name=Jane+Doe&isDeleted=true Features QueryParameterCollection for constructing and manipulating query string parameters Built-in support for serializing primitives, strings, Guid -s, DateTime , DateOnly , TimeOnly , anonymous objects, POCO-s and collections implementing IEnumerable Extensible converter system inspired by System.Text.Json Override serialization defaults using attributes, like [QueryStringParameterName(\"param-name\")] or [QueryStringIgnore] Auto trim string parameters Configurable parameter name casing Convert DateTime to UTC automatically Documentation Documentation for the project is located the docs folder and can be viewed online at https://avolantis.github.io/Avolantis.Text.QueryString . API documentation is available on the website, generated using docfx from XML source code comments. Please note, these docs are under construction, as the project itself. Support Feature requests and bug reports can be submitted in the project's issue tracker on GitHub. You can also open a support request ticket, please use one of the available issue templates. In case of a security issue or vulnerability, please use a private communication channel to report such incident towards the current maintainer, or Avolantis on security@avolantis.net. This helps us prepare a fix for a potential vulnerability before publicizing that such issue exists. Paid priority support is also available for commercial environments. Please contact @avolantis for details of this service. Limitations This library is not (yet) capable of deserializing query string to CLR objects. As expressed in the motivation section, this library is primarily meant to provide an easy way to serialize POCO-s to query strings. As a usable alternative is to use the build-in query binder in aspnet core and annotate the parameters of the model with [FromQuery] , however this does not support nested binding objects. public class Filter { public string Name { get; set; } } // .. [ApiController] public class UsersController : ControllerBase { public Task<IEnumerable<User>> GetList([FromQuery] Filter filter) { // Do something with filter } } Contributing Contributions from the open source community are welcomed and appreciated . Please, make sure you read the contribution guidelines before submitting a PR. This project has adopted the Contributor Covenant code of conduct, which can be found here . Maintainer: @bencelang License MIT"
  }
}