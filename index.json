{
  "api/Avolantis.Text.QueryString..html": {
    "href": "api/Avolantis.Text.QueryString..html",
    "title": "Class | Avolantis.Text.QueryString Documentation",
    "keywords": "Class Represents a query parameter in a key-value pair form Inheritance Object Implements IEquatable < Avolantis.Text.QueryString. > Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Avolantis.Text.QueryString Assembly : Avolantis.Text.QueryString.dll Syntax public class : IEquatable<> Implements System.IEquatable<T>"
  },
  "api/Avolantis.Text.QueryString.html": {
    "href": "api/Avolantis.Text.QueryString.html",
    "title": "Namespace Avolantis.Text.QueryString | Avolantis.Text.QueryString Documentation",
    "keywords": "Namespace Avolantis.Text.QueryString Classes Avolantis.Text.QueryString. Represents a query parameter in a key-value pair form QueryParameterCollection Represents a collection of query string parameters QueryParameterConverter Base class for implementing custom query string parameter converters QueryParameterConverter<T> Base class for implementing custom query string parameter converters QueryStringIgnoreAttribute Specifies the condition for ignoring a type or property during serialization QueryStringSerializerOptions Specifies options for the serialization process Enums QueryParameterIgnoreCondition Specifies the conditions for skipping a parameter during serialization QueryParameterKeyCasingPolicy Specifies whether to adjust casing of Avolantis.Text.QueryString.QueryStringParameter keys while serializing objects to QueryParameterCollection s QueryStringEmptyStringOptions Specifies options for handling empty and whitespace-only strings"
  },
  "api/Avolantis.Text.QueryString.QueryParameterCollection.html": {
    "href": "api/Avolantis.Text.QueryString.QueryParameterCollection.html",
    "title": "Class QueryParameterCollection | Avolantis.Text.QueryString Documentation",
    "keywords": "Class QueryParameterCollection Represents a collection of query string parameters Inheritance Object QueryParameterCollection Implements System.Collections.ICollection < Avolantis.Text.QueryString.QueryStringParameter > Namespace : Avolantis.Text.QueryString Assembly : Avolantis.Text.QueryString.dll Syntax public sealed class QueryParameterCollection : IEquatable<QueryParameterCollection> Constructors | Improve this Doc View Source QueryParameterCollection() Initializes an empty QueryParameterCollection instance Declaration public QueryParameterCollection() | Improve this Doc View Source QueryParameterCollection(IEnumerable<QueryStringParameter>) Initializes a new QueryParameterCollection instance with the specified parameters Declaration public QueryParameterCollection(IEnumerable<QueryStringParameter> parameters) Parameters Type Name Description IEnumerable < Avolantis.Text.QueryString.QueryStringParameter > parameters The parameters to copy into the new QueryParameterCollection Properties | Improve this Doc View Source Item[String] Gets the values associated with the given key Declaration public IReadOnlyList<string> this[string name] { get; } Parameters Type Name Description String name The parameter name to find Property Value Type Description IReadOnlyList < String > | Improve this Doc View Source Item[String, Int32] Gets the value at the given index of the specified parameter Declaration public string this[string name, int index] { get; } Parameters Type Name Description String name The name of the parameter Int32 index The index of the value to retrieve Property Value Type Description String | Improve this Doc View Source Keys Gets the key of parameters defined in this query string Declaration public IReadOnlyCollection<string> Keys { get; } Property Value Type Description IReadOnlyCollection < String > Methods | Improve this Doc View Source Add(QueryStringParameter) Add the given parameter to this query string Declaration public void Add(QueryStringParameter item) Parameters Type Name Description Avolantis.Text.QueryString.QueryStringParameter item The parameter to add Remarks Use Add(String, String) instead, when possible | Improve this Doc View Source Add(String, String) Adds a parameter to the query string Declaration public void Add(string name, string value) Parameters Type Name Description String name The name of the parameter String value The value of the parameter | Improve this Doc View Source Clear() Removes all parameters from the query string Declaration public void Clear() | Improve this Doc View Source Clone() Returns a copy of this query parameter collection Declaration public QueryParameterCollection Clone() Returns Type Description QueryParameterCollection | Improve this Doc View Source Contains(QueryStringParameter) Determines whether this query string contains the specified parameter Declaration public bool Contains(QueryStringParameter item) Parameters Type Name Description Avolantis.Text.QueryString.QueryStringParameter item The parameter to search for Returns Type Description Boolean | Improve this Doc View Source Contains(String, String) Determines if the query string contains a parameter with the specified name and value Declaration public bool Contains(string name, string value) Parameters Type Name Description String name The parameter name to look for String value The value to look for Returns Type Description Boolean | Improve this Doc View Source ContainsKey(String) Determines if the query string contains at least one parameter with the specified name Declaration public bool ContainsKey(string name) Parameters Type Name Description String name The parameter name to look for Returns Type Description Boolean | Improve this Doc View Source Count() Returns the count of parameters Declaration public int Count() Returns Type Description Int32 | Improve this Doc View Source Equals(QueryParameterCollection) Determines whether the current query string is equivalent to the provided query string Declaration public bool Equals(QueryParameterCollection other) Parameters Type Name Description QueryParameterCollection other The query string to compare to Returns Type Description Boolean Returns true if the query string has the exact same parameters as the current query string | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Returns Type Description Boolean | Improve this Doc View Source GetEnumerator() Gets an enumerator to enumerate the query string parameters Declaration public IEnumerator<QueryStringParameter> GetEnumerator() Returns Type Description System.Collections.IEnumerator < Avolantis.Text.QueryString.QueryStringParameter > The instance | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description Int32 | Improve this Doc View Source Parse(String, String, String) Parses a QueryParameterCollection instance from its string representation Declaration public static QueryParameterCollection Parse(string input, string separator = \"&\", string prefix = \"?\") Parameters Type Name Description String input The input string String separator The separator to look for, defaults to & String prefix The prefix to look for, defaults to ? Returns Type Description QueryParameterCollection The parsed QueryParameterCollection instance | Improve this Doc View Source Remove(QueryStringParameter) Removes the specified parameter from this query string Declaration public bool Remove(QueryStringParameter item) Parameters Type Name Description Avolantis.Text.QueryString.QueryStringParameter item The parameter to remove Returns Type Description Boolean Whether the parameter was removed | Improve this Doc View Source Remove(String, Int32) Removes the value at the given index from the specified parameter Declaration public bool Remove(string name, int index) Parameters Type Name Description String name The name of parameter to remove Int32 index The index of the value to remove Returns Type Description Boolean Whether parameters were removed | Improve this Doc View Source Remove(String, String) Removes the first parameter with the specified name and value. Declaration public bool Remove(string name, string value) Parameters Type Name Description String name The name of the parameter to remove String value The value to remove Returns Type Description Boolean Whether a parameter was removed | Improve this Doc View Source RemoveAll(String) Removes all parameters with the specified name Declaration public bool RemoveAll(string name) Parameters Type Name Description String name The name of parameters to remove Returns Type Description Boolean Whether parameters were removed | Improve this Doc View Source RemoveAll(String, String) Removes all parameters with the specified name and value Declaration public int RemoveAll(string name, string value) Parameters Type Name Description String name The name of parameters to remove String value The value to match when deciding whether to remove Returns Type Description Int32 The count of parameters removed | Improve this Doc View Source Set(String, String) Sets a parameter in the query string Declaration public void Set(string name, string value) Parameters Type Name Description String name The name of the parameter String value The value of the parameter Remarks Existing parameters with the same name are removed | Improve this Doc View Source ToString() Serializes the query string to its string representation Declaration public override string ToString() Returns Type Description String The URL-encoded query string Remarks If there are no parameters, an empty string will be returned | Improve this Doc View Source ToString(Boolean, String, String) Serializes the query string to its string representation using the specified settings Declaration public string ToString(bool ignoreNullValues, string separator = \"&\", string prefix = \"?\") Parameters Type Name Description Boolean ignoreNullValues Whether to ignore parameters with null value String separator The separator to use, defaults to & String prefix The prefix to use, defaults to ? Returns Type Description String The URL-encoded query string Remarks If there are no parameters, an empty string will be returned | Improve this Doc View Source TryGetValue(String, Int32, out String) Gets the values associated with the given key Declaration public bool TryGetValue(string name, int index, out string value) Parameters Type Name Description String name The parameter name to find Int32 index The index of the value to retrieve String value The value Returns Type Description Boolean Whether a parameter with a matching name and a value at the given index exists | Improve this Doc View Source TryGetValues(String, out Nullable<IReadOnlyList<String>>) Gets the values associated with the given key Declaration public bool TryGetValues(string name, out IReadOnlyList<string>? values) Parameters Type Name Description String name The parameter name to find Nullable < IReadOnlyList < String >> values The values Returns Type Description Boolean Whether at least one parameter with a matching name exists | Improve this Doc View Source TryParse(String, out QueryParameterCollection, String, String) Tries to parse a QueryParameterCollection instance from its string representation Declaration public static bool TryParse(string input, out QueryParameterCollection result, string separator = \"&\", string prefix = \"?\") Parameters Type Name Description String input The input string QueryParameterCollection result The parsed QueryParameterCollection instance or null String separator The separator to look for, defaults to & String prefix The prefix to look for, defaults to ? Returns Type Description Boolean Whether parsing was successful Operators | Improve this Doc View Source Equality(QueryParameterCollection, QueryParameterCollection) Declaration public static bool operator ==(QueryParameterCollection left, QueryParameterCollection right) Parameters Type Name Description QueryParameterCollection left QueryParameterCollection right Returns Type Description Boolean | Improve this Doc View Source Inequality(QueryParameterCollection, QueryParameterCollection) Declaration public static bool operator !=(QueryParameterCollection left, QueryParameterCollection right) Parameters Type Name Description QueryParameterCollection left QueryParameterCollection right Returns Type Description Boolean Explicit Interface Implementations | Improve this Doc View Source IEnumerable.GetEnumerator() Declaration IEnumerator IEnumerable.GetEnumerator() Returns Type Description IEnumerator Implements System.Collections.ICollection<>"
  },
  "api/Avolantis.Text.QueryString.QueryParameterConverter.html": {
    "href": "api/Avolantis.Text.QueryString.QueryParameterConverter.html",
    "title": "Class QueryParameterConverter | Avolantis.Text.QueryString Documentation",
    "keywords": "Class QueryParameterConverter Base class for implementing custom query string parameter converters Inheritance Object QueryParameterConverter QueryParameterConverter <T> Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Avolantis.Text.QueryString Assembly : Avolantis.Text.QueryString.dll Syntax public abstract class QueryParameterConverter Remarks Use this class when the converter supports multiple types, otherwise inherit from QueryParameterConverter<T> Methods | Improve this Doc View Source CanConvert(Type) Returns whether this converter is can convert values of the given type Declaration public abstract bool CanConvert(Type type) Parameters Type Name Description Type type The type to be converted Returns Type Description Boolean Whether this converter is compatible with the given type | Improve this Doc View Source Convert(String, Object, Type, QueryParameterCollection, QueryStringSerializerOptions) Converts an object to Avolantis.Text.QueryString.QueryStringParameter (s) and adds such parameter(s) to the given QueryParameterCollection Declaration public abstract void Convert(string key, object value, Type type, QueryParameterCollection target, QueryStringSerializerOptions options) Parameters Type Name Description String key The key of the parameter Object value The value of the parameter Type type The type of the object to convert QueryParameterCollection target The target QueryParameterCollection QueryStringSerializerOptions options Serialization options"
  },
  "api/Avolantis.Text.QueryString.QueryParameterConverter-1.html": {
    "href": "api/Avolantis.Text.QueryString.QueryParameterConverter-1.html",
    "title": "Class QueryParameterConverter<T> | Avolantis.Text.QueryString Documentation",
    "keywords": "Class QueryParameterConverter<T> Base class for implementing custom query string parameter converters Inheritance Object QueryParameterConverter QueryParameterConverter<T> Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Avolantis.Text.QueryString Assembly : Avolantis.Text.QueryString.dll Syntax public abstract class QueryParameterConverter<T> : QueryParameterConverter Type Parameters Name Description T The type of the converted object Methods | Improve this Doc View Source CanConvert(Type) Returns whether this converter is can convert values of the given type Declaration public override bool CanConvert(Type type) Parameters Type Name Description Type type The type to be converted Returns Type Description Boolean Whether this converter is compatible with the given type Overrides QueryParameterConverter.CanConvert(Type) | Improve this Doc View Source Convert(String, T, QueryParameterCollection, QueryStringSerializerOptions) Converts an object of type T to Avolantis.Text.QueryString.QueryStringParameter (s) and adds such parameter(s) to the given QueryParameterCollection Declaration protected abstract void Convert(string key, T value, QueryParameterCollection target, QueryStringSerializerOptions options) Parameters Type Name Description String key The key of the parameter T value The value of the parameter QueryParameterCollection target The target QueryParameterCollection QueryStringSerializerOptions options Serialization options | Improve this Doc View Source Convert(String, Object, Type, QueryParameterCollection, QueryStringSerializerOptions) Converts an object to Avolantis.Text.QueryString.QueryStringParameter (s) and adds such parameter(s) to the given QueryParameterCollection Declaration public override void Convert(string key, object value, Type type, QueryParameterCollection target, QueryStringSerializerOptions options) Parameters Type Name Description String key The key of the parameter Object value The value of the parameter Type type The type of the object to convert QueryParameterCollection target The target QueryParameterCollection QueryStringSerializerOptions options Serialization options Overrides QueryParameterConverter.Convert(String, Object, Type, QueryParameterCollection, QueryStringSerializerOptions)"
  },
  "api/Avolantis.Text.QueryString.QueryParameterIgnoreCondition.html": {
    "href": "api/Avolantis.Text.QueryString.QueryParameterIgnoreCondition.html",
    "title": "Enum QueryParameterIgnoreCondition | Avolantis.Text.QueryString Documentation",
    "keywords": "Enum QueryParameterIgnoreCondition Specifies the conditions for skipping a parameter during serialization Namespace : Avolantis.Text.QueryString Assembly : Avolantis.Text.QueryString.dll Syntax public enum QueryParameterIgnoreCondition Fields Name Description Always Always serialize this parameter Never Never serialize this parameter WhenWritingDefault Skip this parameter when the value is default WhenWritingNull Skip this parameter when the value is null"
  },
  "api/Avolantis.Text.QueryString.QueryParameterKeyCasingPolicy.html": {
    "href": "api/Avolantis.Text.QueryString.QueryParameterKeyCasingPolicy.html",
    "title": "Enum QueryParameterKeyCasingPolicy | Avolantis.Text.QueryString Documentation",
    "keywords": "Enum QueryParameterKeyCasingPolicy Specifies whether to adjust casing of Avolantis.Text.QueryString.QueryStringParameter keys while serializing objects to QueryParameterCollection s Namespace : Avolantis.Text.QueryString Assembly : Avolantis.Text.QueryString.dll Syntax public enum QueryParameterKeyCasingPolicy Fields Name Description CamelCase Change casing to camelCase KebabCase Change casing to kebab-case LowerCase Change casing to lowercase NoChange Leve casing as-is PascalCase Change casing to PascalCase UpperCase Change casing to UPPERCASE"
  },
  "api/Avolantis.Text.QueryString.QueryStringEmptyStringOptions.html": {
    "href": "api/Avolantis.Text.QueryString.QueryStringEmptyStringOptions.html",
    "title": "Enum QueryStringEmptyStringOptions | Avolantis.Text.QueryString Documentation",
    "keywords": "Enum QueryStringEmptyStringOptions Specifies options for handling empty and whitespace-only strings Namespace : Avolantis.Text.QueryString Assembly : Avolantis.Text.QueryString.dll Syntax public enum QueryStringEmptyStringOptions Fields Name Description Default Leave string values as-is TreatEmptyAsNotPresent Treat empty strings as if the parameter was not present TreatEmptyAsNull Treat empty strings as null values TreatWhitespaceAsNotPresent Treat empty strings and strings only of whitespace as if the parameter was not present TreatWhitespaceAsNull Treat empty strings and string only of whitespace as null values"
  },
  "api/Avolantis.Text.QueryString.QueryStringIgnoreAttribute.html": {
    "href": "api/Avolantis.Text.QueryString.QueryStringIgnoreAttribute.html",
    "title": "Class QueryStringIgnoreAttribute | Avolantis.Text.QueryString Documentation",
    "keywords": "Class QueryStringIgnoreAttribute Specifies the condition for ignoring a type or property during serialization Inheritance Object QueryStringIgnoreAttribute Namespace : Avolantis.Text.QueryString Assembly : Avolantis.Text.QueryString.dll Syntax public class QueryStringIgnoreAttribute : Attribute Properties | Improve this Doc View Source Condition The condition Declaration public QueryParameterIgnoreCondition Condition { get; set; } Property Value Type Description QueryParameterIgnoreCondition"
  },
  "api/Avolantis.Text.QueryString.QueryStringSerializerOptions.html": {
    "href": "api/Avolantis.Text.QueryString.QueryStringSerializerOptions.html",
    "title": "Class QueryStringSerializerOptions | Avolantis.Text.QueryString Documentation",
    "keywords": "Class QueryStringSerializerOptions Specifies options for the serialization process Inheritance Object QueryStringSerializerOptions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Avolantis.Text.QueryString Assembly : Avolantis.Text.QueryString.dll Syntax public class QueryStringSerializerOptions Properties | Improve this Doc View Source AllowDuplicateParameters Gets or sets whether to print duplicate values during serialization Declaration public bool AllowDuplicateParameters { get; set; } Property Value Type Description Boolean | Improve this Doc View Source AutoConvertToUtc Gets or sets whether to convert values to UTC Declaration public bool AutoConvertToUtc { get; set; } Property Value Type Description Boolean | Improve this Doc View Source Converters Gets or sets the available QueryParameterConverter s used to convert CLR objects to their corresponding Avolantis.Text.QueryString.QueryStringParameter s Declaration public ICollection<QueryParameterConverter> Converters { get; set; } Property Value Type Description ICollection < QueryParameterConverter > | Improve this Doc View Source DateOnlyFormat Gets or sets the format string for values Declaration public string DateOnlyFormat { get; set; } Property Value Type Description String | Improve this Doc View Source DateTimeFormat Gets or sets the format string for values Declaration public string DateTimeFormat { get; set; } Property Value Type Description String | Improve this Doc View Source Default Gets or sets the default query string serializer options Declaration public static QueryStringSerializerOptions Default { get; set; } Property Value Type Description QueryStringSerializerOptions | Improve this Doc View Source DefaultPrecision Gets or sets the default precision of fractional numbers Declaration public int DefaultPrecision { get; set; } Property Value Type Description Int32 | Improve this Doc View Source EmptyStringOptions Gets or sets the QueryStringEmptyStringOptions Declaration public QueryStringEmptyStringOptions EmptyStringOptions { get; set; } Property Value Type Description QueryStringEmptyStringOptions | Improve this Doc View Source IgnoreNullValues Gets or sets whether to ignore null values during serialization Declaration public bool IgnoreNullValues { get; set; } Property Value Type Description Boolean | Improve this Doc View Source KeyCasingPolicy Gets or sets the QueryParameterKeyCasingPolicy Declaration public QueryParameterKeyCasingPolicy KeyCasingPolicy { get; set; } Property Value Type Description QueryParameterKeyCasingPolicy | Improve this Doc View Source ParameterSeparator Gets or sets the parameter separator of the query string Declaration public string ParameterSeparator { get; set; } Property Value Type Description String | Improve this Doc View Source Prefix Gets or sets the prefix of the query string Declaration public string Prefix { get; set; } Property Value Type Description String | Improve this Doc View Source StringComparer Gets or sets the default string comparer used when checking for duplicate parameters Declaration public StringComparer StringComparer { get; set; } Property Value Type Description StringComparer | Improve this Doc View Source TimeOnlyFormat Gets or sets the format string for values Declaration public string TimeOnlyFormat { get; set; } Property Value Type Description String | Improve this Doc View Source TrimStrings Gets or sets whether to auto-trim string values Declaration public bool TrimStrings { get; set; } Property Value Type Description Boolean"
  },
  "api/index.html": {
    "href": "api/index.html",
    "title": "Overview | Avolantis.Text.QueryString Documentation",
    "keywords": "Overview This project has an auto-generated documentation from XML source code comments, using docfx . You can browse the contents using the navigation sidebar on the left."
  },
  "index.html": {
    "href": "index.html",
    "title": "Avolantis.Text.QueryString | Avolantis.Text.QueryString Documentation",
    "keywords": "Avolantis.Text.QueryString URL query string handling and serialization for .NET 6 This library helps you manage URL query parameters in a specialized collection and allows you to serialize a POCO to a query string. :warning: 🚧 IMPORTANT: This project has not yet reached it's first stable release and is being developed currently. See how you can help below. Install dotnet package add Avolantis.Text.QueryString Avolantis.Text.QueryString targets .NET 6. Support for preceding versions of .NET (Core) is not a current goal. Please open an issue to request targeting such environments. The project follows the conventions outlined in Semantic Versioning 2.0.0 . Motivation Imagine having to write a client application in C# (e.g. Blazor WebAssembly) to send queries to REST endpoint with various filtering options via query string parameters, like Task<IEnumerable<UserDto>> GetList([FromQuery] UserQueryOptions options) { // ... } class UserDto { public string UserName { get; set; } public DateTime CreatedAt { get;set; } public bool IsDeleted { get; set; } } class UserQueryOptions { // Retrieve users with specified names public IEnumerbale<string> Name { get; set; } // Retrieve users created before the given timestamp public DateTime? CreatedBefore { get; set; } // Filter by deleted status public bool IsDeleted { get; set; } = false; } Using this library you can use a POCO like the one above to construct your filters. var filter = new UserQueryOptions { Name = new string[] { \"John Doe\", \"Jane Doe\" }, IsDeleted = true }; var qs = QueryStringSerializer.Serialize(filter); // ?name=John+Doe&name=Jane+Doe&isDeleted=true Features QueryParameterCollection for constructing and manipulating query string parameters Built-in support for serializing primitives, strings, Guid -s, DateTime , DateOnly , TimeOnly , anonymous objects, POCO-s and collections implementing IEnumerable Extensible converter system inspired by System.Text.Json Override serialization defaults using attributes, like [QueryStringParameterName(\"param-name\")] or [QueryStringIgnore] Auto trim string parameters Configurable parameter name casing Convert DateTime to UTC automatically Documentation Documentation for the project is located the docs folder and can be viewed online at https://avolantis.github.io/Avolantis.Text.QueryString . API documentation is available on the website, generated using docfx from XML source code comments. Please note, these docs are under construction, as the project itself. Support Feature requests and bug reports can be submitted in the project's issue tracker on GitHub. You can also open a support request ticket, please use one of the available issue templates. In case of a security issue or vulnerability, please use a private communication channel to report such incident towards the current maintainer, or Avolantis on security@avolantis.net. This helps us prepare a fix for a potential vulnerability before publicizing that such issue exists. Paid priority support is also available for commercial environments. Please contact @avolantis for details of this service. Limitations This library is not (yet) capable of deserializing query string to CLR objects. As expressed in the motivation section, this library is primarily meant to provide an easy way to serialize POCO-s to query strings. As a usable alternative is to use the build-in query binder in aspnet core and annotate the parameters of the model with [FromQuery] , however this does not support nested binding objects. public class Filter { public string Name { get; set; } } // .. [ApiController] public class UsersController : ControllerBase { public Task<IEnumerable<User>> GetList([FromQuery] Filter filter) { // Do something with filter } } Contributing Contributions from the open source community are welcomed and appreciated . Please, make sure you read the contribution guidelines before submitting a PR. This project has adopted the Contributor Covenant code of conduct, which can be found here . Maintainer: @bencelang License MIT"
  }
}